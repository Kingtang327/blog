(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{388:function(a,t,s){"use strict";s.r(t);var r=s(42),v=Object(r.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"jvm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jvm"}},[a._v("#")]),a._v(" JVM")]),a._v(" "),s("h2",{attrs:{id:"本章主要学习jvm相关知识"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#本章主要学习jvm相关知识"}},[a._v("#")]),a._v(" 本章主要学习JVM相关知识")]),a._v(" "),s("h2",{attrs:{id:"学习资源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#学习资源"}},[a._v("#")]),a._v(" 学习资源")]),a._v(" "),s("p",[a._v("https://blog.csdn.net/K_Tang")]),a._v(" "),s("h2",{attrs:{id:"虚拟机的前世今生和java内存区域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#虚拟机的前世今生和java内存区域"}},[a._v("#")]),a._v(" 虚拟机的前世今生和Java内存区域")]),a._v(" "),s("h2",{attrs:{id:"深入理解java内存区域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#深入理解java内存区域"}},[a._v("#")]),a._v(" 深入理解Java内存区域")]),a._v(" "),s("h2",{attrs:{id:"玩转jvm中的对象及引用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#玩转jvm中的对象及引用"}},[a._v("#")]),a._v(" 玩转JVM中的对象及引用")]),a._v(" "),s("h2",{attrs:{id:"分代回收机制及垃圾回收算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分代回收机制及垃圾回收算法"}},[a._v("#")]),a._v(" 分代回收机制及垃圾回收算法")]),a._v(" "),s("h2",{attrs:{id:"jvm面试-核武器-jvm底层细节"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jvm面试-核武器-jvm底层细节"}},[a._v("#")]),a._v(" JVM面试“核武器”JVM底层细节")]),a._v(" "),s("h2",{attrs:{id:"class文件结构及深入字节码指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#class文件结构及深入字节码指令"}},[a._v("#")]),a._v(" Class文件结构及深入字节码指令")]),a._v(" "),s("h2",{attrs:{id:"类加载机制与类加载器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类加载机制与类加载器"}},[a._v("#")]),a._v(" 类加载机制与类加载器")]),a._v(" "),s("h1",{attrs:{id:"哈哈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#哈哈"}},[a._v("#")]),a._v(" 哈哈")]),a._v(" "),s("h2",{attrs:{id:"方法调用的底层实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法调用的底层实现"}},[a._v("#")]),a._v(" 方法调用的底层实现")]),a._v(" "),s("h2",{attrs:{id:"java语法糖及实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java语法糖及实现"}},[a._v("#")]),a._v(" Java语法糖及实现")]),a._v(" "),s("h2",{attrs:{id:"gc调优基础知识之工具篇-原生-arthas"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gc调优基础知识之工具篇-原生-arthas"}},[a._v("#")]),a._v(" GC调优基础知识之工具篇(原生+Arthas)")]),a._v(" "),s("h2",{attrs:{id:"jvm调优实战之cpu占用过高"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jvm调优实战之cpu占用过高"}},[a._v("#")]),a._v(" JVM调优实战之CPU占用过高")]),a._v(" "),s("h2",{attrs:{id:"jvm性能调优之预估调优与问题排查"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jvm性能调优之预估调优与问题排查"}},[a._v("#")]),a._v(" JVM性能调优之预估调优与问题排查")]),a._v(" "),s("h2",{attrs:{id:"玩转mat-分析内存泄漏"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#玩转mat-分析内存泄漏"}},[a._v("#")]),a._v(" 玩转MAT，分析内存泄漏")]),a._v(" "),s("h2",{attrs:{id:"直接内存与jvm源码分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#直接内存与jvm源码分析"}},[a._v("#")]),a._v(" 直接内存与JVM源码分析")]),a._v(" "),s("h2",{attrs:{id:"面试题目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#面试题目"}},[a._v("#")]),a._v(" 面试题目")])])}),[],!1,null,null,null);t.default=v.exports}}]);